<div class="project-page">
<div class="container">
  <h1 class="page-title">Bolt Network</h1>
  <h4 class="technologies">Ruby on Rails | SASS | jQuery</h4> 
  
  <div class="row">
  	<div class="col-md-12">
  	  <div class="p-info">
  	  	
        <p>Bolt Network is an on-going attempt to reverse engineer Netflix's front end. What began
        as a practice project on Codecademy is now a large application with 80 movie objects that 
        uses Ruby algorithms, complex JavaScript effects, and serves images from Amazon S3. My 
        additions include an animated, fixed navbar, a main slideshow scaled to browser width with 
        jQuery, an animated search form using Regexp, and CSS3-animated carousel sliders built with 
        Ruby and a modified version of Unslider. Using Bootstrap, jQuery, and my own break-point 
        mixins, the views adapt to browser width to display elegantly on any device.</p>

  	  </div>
  	</div>
  </div>

  <div class="row">
	  <a href="https://bolt-network-wstevo4891.herokuapp.com" target="_blank" class="site-link">Visit Website</a>
  </div>

  <div class="row">
    <div class="project-img col-md-8 col-md-offset-2">
      <%= image_tag("bolt-network-full-new.png", class: "img-responsive") %>
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <div class="p-info">

        <h4>Project Highlights</h4>
        <ul>
          <li>Netflix-style carousels on homepage that load with a Ruby algorithm</li>
          <li>Carousels mimic Netflix effects with CSS3</li>
          <li>Main slideshow adapts to browswer width using jQuery</li>
          <li>Search bar mimics Netflix animation and searches titles with Regular Expressions</li>
          <li>Navbar achieved shadowing effects of Netflix navbar</li>
          <li>All Genres index actions work through AJAX</li>
        </ul>
        <br>

        <h4>Technology Stack</h4>
        <ul>
          <li>Ruby on Rails</li>
          <li>Bootstrap</li>
          <li>SASS</li>
          <li>jQuery</li>
          <li>CSS3</li>
          <li>Amazon S3</li>
        </ul>

        <p>I completed the overhaul of Bolt Network over a month from mid-April to mid-May, 2016. This 
        was an experimental project with several learning goals in mind. Having completed serveral algorithm 
        challenges on HackerRank, I wanted to see how I could use Ruby and JavaScript to make this app more 
        responsive and interactive. In the process, I arrived at the goal of re-creating Netflix's front end. 
        As the project is on-going, I expect to make future improvements such as swapping out Unslider for 
        a custom carousel that will more accurately depict Netflix effects. I already have ideas on how to do 
        it so watch this space!</p>
      </div>

      <div class="p-info">

        <p>Now I'll get more specific on how I turned</p>

        <div class="row">
          <div class="col-sm-5 text-center">
            <h3>this...</h3>

            <%= image_tag("bolt-network-full-old.png", class: "img-responsive") %>
          </div>

          <div class="col-sm-5 col-sm-offset-1 text-center">
            <h3>...into this!</h3>

            <%= image_tag("bolt-network-full-new.png", class: "img-responsive") %>
          </div>
        </div>

        <div class="line-break-blue"></div>
      </div>

      <div class="p-info">
        <h2>Main Slideshow</h2>

        <%= image_tag("bolt-network-main-slider.gif", class: "img-responsive") %>

        <p>The main slideshow is built on Vegas.js with custom scripts for altering content 
        and scaling to browser width. At the moment, the content div height is set to 18em 
        and the slider height adjusts to 200px less than the browser width. Content text is 
        set to scale at 0.014% of browser width. I intend to adjust the content scaling in 
        future versions to resize in a smoother, less noticeable way.</p>

      <div class="line-break-blue"></div>
    </div>

    <div class="p-info">
      <h2>Navigation Bar</h2>

      <%= image_tag("bolt-network-navbar.gif", class: "img-responsive") %>

      <p>Netflix's navbar appears on scrolldown, which was easy enough to implement, but a 
      challenge arose when dealing with the mobile menu. I kept the Bootstrap slidedown 
      style, but when you open the menu at the top of the page, it had a transparent 
      background. I solved this by using a variable to keep track of scroll-length and 
      adding a class to the nav that prevents removing the background if the menu is open.</p>

      <div class="line-break-blue"></div>
    </div>

    <div class="p-info">
      <h2>Search Bar</h2>

      <%= image_tag("bolt-network-searchbar.gif", class: "img-responsive") %>

      <p>Re-creating the Netflix search bar animation involved a bit of jQuery to hide the
      nav link, show the div containing the search form, and animating its width to 270px. 
      Getting it to disappear when you click outside was a matter of checking three attributes. 
      1. Is the mouseup target the search bar? 2. Does the mouseup target have a length of 0? 
      3. Does the search bar have a width of 270px?  If, no, yes, and yes, the search bar 
      shrinks and disappears, replaced by the nav link. Another function checks the length 
      of the search input tag's value. If it's greater than 0, the X icon appears. When you 
      click that icon, it sets the input value to an empty string.</p>

      <div class="line-break-blue"></div>
    </div>

    <div class="p-info">
      <h2>Carousel Sliders</h2>

      <%= image_tag("bolt-network-carousels.gif", class: "img-responsive") %>

      <p>The carousels are built using a Ruby algorithm in an erb partial, some jQuery functions, 
      and a modified Unslider.js. Since Unslider uses list items for its slides, I put five movie divs 
      in each li and assigned classes with jQuery to the first and last images in each slide. 
      Those classes control which CSS3 animation class is added to or removed from the ul on 
      hovering over an image. The first image in a slide removes any of those classes, so the 
      image's scale animation stretches it out to the right. The images in the middle put a 
      translateX animation on the ul so it moves to the left on hover, thus simulating the 
      of a movie image pushing the slides on either side when it grows. The last image in a 
      slide puts an even greater translateX on the ul, so the image appears to stretch left. 
      This way, the images stay within the shadowed borders on either side of the slide.</p>

      <div class="line-break-blue"></div>
    </div>
  </div>
</div>
</div>
